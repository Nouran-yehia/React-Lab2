{"ast":null,"code":"var _jsxFileName = \"/home/noura/my-app/src/PostsPage.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport SearchInput, { createFilter } from 'react-search-input';\n\nclass PostsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    debugger;\n    const {\n      match: {\n        params: {\n          userId\n        }\n      }\n    } = this.props;\n    const url = !userId ? 'https://jsonplaceholder.typicode.com/posts' : `https://jsonplaceholder.typicode.com/posts/?userId=${userId}`;\n    axios.get(url).then(result => {\n      this.setState({\n        posts: result.data\n      });\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      search: title\n    });\n  }\n\n  render() {\n    const filter = this.state.posts.filter(createFilter(this.state.search, ['title']));\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(SearchInput, {\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), filter.map(posts => React.createElement(Post, {\n      key: posts.id,\n      data: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(PostsPage);","map":{"version":3,"sources":["/home/noura/my-app/src/PostsPage.js"],"names":["React","axios","withRouter","SearchInput","createFilter","PostsPage","Component","constructor","props","state","posts","handleChange","bind","componentDidMount","match","params","userId","url","get","then","result","setState","data","e","search","title","render","filter","map","id","post"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,WAAP,IAAsBC,YAAtB,QAA0C,oBAA1C;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV;AAAT,QAAoC,KAAKR,KAA/C;AACA,UAAMS,GAAG,GAAG,CAACD,MAAD,GAAU,4CAAV,GAA0D,sDAAqDA,MAAO,EAAlI;AACAf,IAAAA,KAAK,CAACiB,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,MAAD,IAAY;AAC9B,WAAKC,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAEU,MAAM,CAACE;AAAhB,OAAd;AACD,KAFD;AAID;;AAEDX,EAAAA,YAAY,CAACY,CAAD,EAAI;AAEd,SAAKF,QAAL,CAAc;AACZG,MAAAA,MAAM,EAAGC;AADG,KAAd;AAGD;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKlB,KAAL,CAAWC,KAAX,CAAiBiB,MAAjB,CAAwBvB,YAAY,CAAC,KAAKK,KAAL,CAAWe,MAAZ,EAAmB,CAAC,OAAD,CAAnB,CAApC,CAAf;AACA,WACE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKb,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIIgB,MAAM,CAACC,GAAP,CAAYlB,KAAD,IAAU,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAK,CAACmB,EAAjB;AAAqB,MAAA,IAAI,EAAEC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CAJJ,CADA,CADF;AAWD;;AAtCqC;;AAyCxC,eAAe5B,UAAU,CAACG,SAAD,CAAzB","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport SearchInput, { createFilter } from 'react-search-input'\n\nclass PostsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { posts: [] };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    debugger\n    const { match: { params: { userId } } } = this.props;\n    const url = !userId ? 'https://jsonplaceholder.typicode.com/posts' : `https://jsonplaceholder.typicode.com/posts/?userId=${userId}`;\n    axios.get(url).then((result) => {\n      this.setState({ posts: result.data })\n    }\n    )\n  }\n\n  handleChange(e) {\n\n    this.setState({\n      search : title\n    });\n  }\n\n\n  render() {\n    const filter = this.state.posts.filter(createFilter(this.state.search,['title']))\n    return (\n      <>\n      <div>\n          <SearchInput onChange={this.handleChange} />\n        <div></div>\n        {\n          filter.map((posts)=> <Post key={posts.id} data={post}/>)\n        }\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withRouter(PostsPage);"]},"metadata":{},"sourceType":"module"}