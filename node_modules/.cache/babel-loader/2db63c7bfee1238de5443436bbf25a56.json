{"ast":null,"code":"var _jsxFileName = \"/home/noura/my-app/src/PostsPage.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport SearchInput, { createFilter } from 'react-';\n\nclass PostsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    debugger;\n    const {\n      match: {\n        params: {\n          userId\n        }\n      }\n    } = this.props;\n    const url = !userId ? 'https://jsonplaceholder.typicode.com/posts' : `https://jsonplaceholder.typicode.com/posts/?userId=${userId}`;\n    axios.get(url).then(result => {\n      this.setState({\n        posts: result.data\n      });\n    });\n  }\n\n  handleChange(e) {\n    let currentPostsPage = [];\n    let newPostsPage = [];\n\n    if (e.target.value !== \"\") {\n      currentPostsPage = this.props.items;\n    } else {\n      newPostsPage = this.props.items;\n    } // Set the filtered state based on what our rules added to newList\n\n\n    this.setState(newPostsPage);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      placeholder: \"Search...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), this.state.posts.map(post => React.createElement(\"div\", {\n      className: \"post\",\n      key: \"post.id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, post.id), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, post.title))));\n  }\n\n}\n\nexport default withRouter(PostsPage);","map":{"version":3,"sources":["/home/noura/my-app/src/PostsPage.js"],"names":["React","axios","withRouter","SearchInput","createFilter","PostsPage","Component","constructor","props","state","posts","componentDidMount","match","params","userId","url","get","then","result","setState","data","handleChange","e","currentPostsPage","newPostsPage","target","value","items","bind","render","map","post","id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,OAAOC,WAAP,IAAqBC,YAArB,QAAwC,QAAxC;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAC;AAAEC,UAAAA;AAAF;AAAT;AAAT,QAAiC,KAAKN,KAA5C;AACA,UAAMO,GAAG,GAAC,CAACD,MAAD,GAAQ,4CAAR,GAAsD,sDAAqDA,MAAO,EAA5H;AACAb,IAAAA,KAAK,CAACe,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,MAAD,IAAU;AAC9B,WAAKC,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAEQ,MAAM,CAACE;AAAhB,OAAd;AAAsC,KADtC;AAGD;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,QAAIC,gBAAgB,GAAG,EAAvB;AACA,QAAIC,YAAY,GAAG,EAAnB;;AAEA,QAAIF,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,EAAvB,EAA2B;AAC3BH,MAAAA,gBAAgB,GAAG,KAAKf,KAAL,CAAWmB,KAA9B;AACD,KAFC,MAGE;AACJH,MAAAA,YAAY,GAAG,KAAKhB,KAAL,CAAWmB,KAA1B;AACD,KATiB,CAUd;;;AACJ,SAAKR,QAAL,CACEK,YADF;AAGA,SAAKH,YAAL,GAAoB,KAAKA,YAAL,CAAkBO,IAAlB,CAAuB,IAAvB,CAApB;AACC;;AAGCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,OAA7B;AAAqC,MAAA,WAAW,EAAC,WAAjD;AAA6D,MAAA,QAAQ,EAAE,KAAKR,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIG,KAAKZ,KAAL,CAAWC,KAAX,CAAiBoB,GAAjB,CAAqBC,IAAI,IACxB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,IAAI,CAACC,EAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,IAAI,CAACE,KAAX,CAFF,CADD,CAJH,CADF;AAaD;;AA/CqC;;AAkDxC,eAAe/B,UAAU,CAACG,SAAD,CAAzB","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {withRouter} from 'react-router';\nimport SearchInput, {createFilter} from 'react-'\n\nclass PostsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { posts: [] };\n  }\n\n  componentDidMount() {\n    debugger\n    const { match: { params:{ userId }}} = this.props;\n    const url=!userId?'https://jsonplaceholder.typicode.com/posts':`https://jsonplaceholder.typicode.com/posts/?userId=${userId}`;\n    axios.get(url).then((result)=>{\n    this.setState({ posts: result.data })}\n    )\n  }\n\n  handleChange(e) {\n    let currentPostsPage = [];\n    let newPostsPage = [];\n\n    if (e.target.value !== \"\") {\n    currentPostsPage = this.props.items;\n  }\n else {\n  newPostsPage = this.props.items;\n}\n    // Set the filtered state based on what our rules added to newList\nthis.setState(\n  newPostsPage\n);\nthis.handleChange = this.handleChange.bind(this);\n}\n\n\n  render() {\n    return (\n      <div>\n        <div>\n          <input type=\"text\" className=\"input\" placeholder=\"Search...\" onChange={this.handleChange} />\n        </div>\n        {this.state.posts.map(post =>\n          <div className=\"post\" key=\"post.id\">\n            <div>{post.id}</div>\n            <div>{post.title}</div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(PostsPage);"]},"metadata":{},"sourceType":"module"}